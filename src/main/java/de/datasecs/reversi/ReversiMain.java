package de.datasecs.reversi;

import de.datasecs.reversi.map.Map;
import de.datasecs.reversi.map.MapLoader;
import de.datasecs.reversi.moves.BombMove;
import de.datasecs.reversi.moves.Move;
import de.datasecs.reversi.network.Client;
import de.datasecs.reversi.util.Coordinate;

import java.util.LinkedList;
import java.util.List;

public class ReversiMain {

    public static String s = "c  0  1  0  1' 0' 1  2' 2' 0' 0' 2' 2  1  c' -  0  i' 2' 2  1' 1' 2' -  0' " +
            "1  0  c  0  0' b' 1' 0' 1' 1  2  -  1' c' 2  0  i' 2  1' 0' 0' 2' 2' 1' 1 " +
            "c  0  b  b  0' 2' 2' 1  0  0  2  2' 2  0  x' b' 1  1  0  0  0' 0' 1' x' 1' " +
            "0  -  0  0  1' 0' 2' 1  0  c' -  0' b' x' b  2  0  0  1  2  0' 0  0' 2' 1' " +
            "c' 0  1  0  0  -  1' 1' 1' 2' 2' 0' 0  b  0' b  0' 0  1  0  0  2  0' 1' 0' " +
            "c  c  0  0  1' 0  1  2  x' x' i' 0' 1' 2  i' 2  1' 2  1' 1  b  0  c' 1' 2 " +
            "2  1  1  x' 0' -  i' 0' x' 1' x' 2' 1' 2  2' i' 0' 2' 1  1  2  0' 1  -  1 " +
            "0' i  1' 0' x' 0  -  2  b' 2' 1' 1' 1' c  0' 0' 0' 0  2' c' 2' x' 1  c' 0' " +
            "2  1  0  2  0  0  0  1' 1  0' 0' 2' 1  1  c  x' 2  c' c' -  i' c' i' b  x' " +
            "2  0' 0  1' 0' i  2  i  -  0' 2' 1' 0' 0  2  b  0  1' 0  b  2  0  1  -  2 " +
            "c  0  0  2' 0  1' 2  0' 0  1' 0  1  -  0  i  0' 1' 1  2' 2' c' -  1' 1' 1 " +
            "1  0' 2  1' 0  2  2  i  c  0  b  1  -  -  2  i' x' -  2  2' 0' 2  1  2  0' " +
            "1  1  b  2  0  2' 2  0' 1  0  0  0  i  0' 0' 2' 1' 2  0' 2' 1' 0' 0' 1' c' " +
            "c  0  0  1' c  i' 2' -  2  2' 2' i' 1' 0' 0' 1' 0' i  0' 2' 2' -  2  c' 1 " +
            "b' 2  1' i  0  -  2  0' 0' 0  i' x' 0  x' 0  2' b  1  1' c  0' 2' b  2  0' " +
            "0  0  0' 2  1  0' 2  1  1' 0' 1' c' c' 1' x' 1' 0' -  0' c  b' i  0' 1  2 " +
            "0  i  2  b  1' -  -  x' 1  2  0' 0' 2  1  0  2' i  2  b' 2  -  0  1' 2' 1' " +
            "2  0  0' c' c  i  0' 0' 0' 1  1' 0' 1  1' 0  -  1' -  1  b  1  0  2' i' c " +
            "0  0  -  2' 1  0' 1  0  2' 2  i' 0  1' x' 1' 2  1' 2' 0' 0  0  b' c' 0' x' " +
            "0' c' b  2  x' b  i' 0' x' 2' 0  0' i  1' 0' 1  0' x' i' 0  c  i  b  -  c " +
            "2  0' 0' 1' 0' 2' 0  0' -  x' 2' 2' 0' 0  i' 2  1  x' x' 2' x' 0' 0' 0  0' " +
            "1  0' 0  2' 2  0  1  1  c' 2' 0  -  c  0' i  2' 0  0' i  0' i  2  0  1  i' " +
            "2  1' 2  1' 2' 2' 1' 0  1  2' 0' 0  x' 0  0' 0' 0  2  0' 0' 1  2  2' 0' x' " +
            "i' 1' 0  2  c' 0' 2' 1  0  c' 1' -  0' 0  1  b  i  0  2  c  x' 2' 0  2' - " +
            "2  1  i  i' 0  x' 0' 0' 0  -  2' 0' 0  1  -  i  1  1  1  x' 0' 2  0' 2  c ";

    private static String s2 = "c  0  1  0  1  0' 1' 2' 2' 0' 0  2  2' 1' c' -  0  i  2  2' 1' 1' 2' -  0' " +
            "1  0  c  0' 0  b' 1  0' 1' 1  2  -  1  c' 2  0  i  2' 1  0' 0  2' 2' 1' 1' " +
            "c  0  b  b' 0  2' 2  1  0' 0' 2' 2  2' 0' x' b  1  1' 0' 0  0  0  1  x' 1' " +
            "0  -  0  0  1  0' 2' 1  0' c  -  0  b  x' b' 2' 0' 0' 1' 2' 0  0  0' 2' 1' " +
            "c' 0  1  0' 0  -  1' 1' 1' 2' 2' 0' 0  b' 0' b' 0  0' 1' 0' 0  2  0' 1' 0 " +
            "c' c  0  0  1' 0' 1' 1' 1' x' i  0' 1  2  i  2' 1  2' 1' 1' b' 0  c' 1' 2 " +
            "2  1' 1' x' 0' -  i' 0' 1' 1' x' 2' 1  2' 2  i  0  2' 1' 1' 2' 0  1  -  1 " +
            "0  i  1' 0  x' 0  -  2' b' 2' 1' 1' 1' c' 0  0  0' 0  2  c' 2' x' 1' c' 0' " +
            "2  1' 0' 2' 0  0  0  1  1' 0' 0' 2' 1' 1' c' x' 2' c  c  -  i  c' i' b  x' " +
            "2' 0  0  1  0' i' 2  i' -  0' 2  1  0' 0' 2' b' 0' 1  0' b  2' 0' 1  -  2 " +
            "c' 0  0  2' 0' 1  2  0  0  1  0' 1' -  0  i  0' 1' 1' 2' 2  c  -  1  1  1 " +
            "1  0  2  1  0' 2  2  i' c' 0  b  1' -  -  2  i  x' -  2  2  0' 2' 1' 2' 0' " +
            "1  1  b  2' 0  2  2  0  1  0  0' 0' i' 0' 0  2' 1  2' 0  2  1  0' 0  1  c' " +
            "c' 0' 0  1  c  i  2  -  2  2  2  i  1' 0  0  1  0  i' 0  2' 2  -  2  c' 1 " +
            "b  2  1  i' 0  -  2  0' 0' 0  i  x' 0  x' 0' 2' b  1  1  c  0  2  b' 2' 0 " +
            "0  0  0  2  1  0' 2' 1  1' 0' 1  c  c' 1  x' 1  0  -  0  c  b  i  0' 1' 2 " +
            "0' i  2  b' 1  -  -  x' 1' 2' 0' 0' 2  1' 0' 2' i' 2' b  2' -  0' 1  2' 1 " +
            "2  0  0  c  c  i' 0  0  0' 1' 1  0  1' 1  0  -  1  -  1  b  1  0  2  i' c' " +
            "0  0  -  2' 1  0' 1  0  2' 2' i' 0' 1' x' 1' 2' 1  2' 0' 0' 0  b' c  0  x' " +
            "0  c  b' 2' x' b' i  0' x' 2' 0  0  i' 1' 0  1' 0  x' i  0' c  i  b  -  c " +
            "2' 0  0  1  0  2' 0' 0' -  x' 2' 2  0' 0  i  2' 1' x' x' 2' x' 0' 0' 0  0' " +
            "1  0  0  2' 2  0  1' 1  c  2' 0' -  c' 0  i  2  0  0' i  0' i  2  0  1' i " +
            "2' 1  2' 1  2' 2  1' 0' 1  2  0' 0  x' 0  0  0' 0  2  0  0' 1  2' 2  0  x' " +
            "i  1  0' 2' c' 0' 2  1' 0' c  1  -  0  0  1' b' i  0' 2  c' x' 2  0  2  - " +
            "2' 1  i' i  0  x' 0' 0  0  -  2' 0' 0  1' -  i' 1  1  1' x' 0' 2  0  2  c' ";

    private static String s3 = "4  7  0  0  c' 0' 3' 0' 5  1' 1  7  7' -  b' 1  c  2  c  8  6' c' x' i  4  i  6  c' -  x' 0' 7  1  i' i  0  1  5  i' 2' 0' i  4  4  5  i  0  5  0  i " +
            "0  8' 8  4  c  0  b  8' 4' 0  0  i' 8  0' 5  0  1  7  b' x' 0  c' 5  0  i  0  2  0  0  0  8  x' 5  0  x' 0  x' x' 7  8  6' 3  0' 3  0  x' 0' 3  3  0 " +
            "i  c' i  c  i  3  4  x' 6' -  i  0  5  3' 0  0  2  2  5  c  0  5  0  5  c  c  6  i  c  7  0' 4  c' c  8  4' 0' 0  0' 0  4' 4' x' 0  5  c  -  5  0  b " +
            "i  3  -  0  -  -  4' c  6  0' 0  0  i' 0  b' 0  0' x' b' c' -  3  -  6  0  0  -  b  0  3  0' -  -  0  0  0' 7' 0  0  6  3' 0  2' 0  2  0  0  0  0' 8' " +
            "0  0  -  c  0' 1' 2  0' 2  i  0  0  6  0' 2' 0' 0  0  c  7  0  3  c  5  7  0  3  0  1  6  2' 2' 6' 0' 0' 5  4' 7  b  5  2' 0  0  6  0  0  3  6' 0  0 " +
            "5  7  0' 0  b' 5' 4' 0  0  0  6  0  5  b' 2' 2' 5  0' 1  0  7  0  i  0  4' c  -  5' 7  -  i  5' x' 7' 0  0' 0' 8' 1  3  -  0' 7' 4  1  0  8' x' c  3 " +
            "0' c  0' 5' 7' 7' 4  1' 0  8  0  i  0  i  2' 8' 0  4' 3  -  2  7  0  0  7  0' 3' 4  b' 6' 7' 6' x' 1  0' 1' 8  c' -  2  c  2  0  4  4  -  -  0  4  5 " +
            "0  1  0  0  1  0' 4  1' 5  b' 7' 2  1  0' 7' 1  8' 8' 0' 7  8  5  b  3  -  0' 0  5  -  x' i  1  b  c' 8' 3' c' 1' 0  0  c' 2  0' -  0' 0  0  0' b  5 " +
            "5  3  0  c' 0  0' i  b  5' 0' i  0  0  b' 3' 3' 3  1  0  -  5  i  0  2  0  -  6  0' 3  0' 2  0  i' x' 3' 5' 8' x' 3' 8' 8' x' x' 4  1  7  0' b  4' 0 " +
            "c  0' 8' 3  i  4  0  5  0  -  0  0  b  b' -  0' -  5' 7  i  0' i  0  4  c  5  i  3  4' -  0  0  6' b  -  1' 4' 0' 0' -  i' 3  1  3  5' i' b  0' -  8' " +
            "5  4' x' 0' 2  -  0  -  2  7  i  i' 5  1  7  x' b' b' 3' 0' 8  0  5  6  -  0  6  0  3  -  c  0' c' 0  0' 3  1  i' 5  3' i  b' 0' 0  0' 0  0  5  0  0 " +
            "3' 6  6  4  0  0  x' 4' i  8  0' 0  0' 7  8  6  -  0  0  2' 3  0  i  4  0' 2  0  7  0  c' 8' 3' i' 0  0' 0' i  6  i  1  6' x' 0' 6  5  0  5' 0  3  2 " +
            "0  6  b' 0  0  0  2  5' 2  0  6' 0  x' x' 0  5' 0  2  0  8  b' 4  b  5' 0  -  0  i  0  x' 5  0' 6  x' 0  0  2  0  0' 0  0  8  -  i  5  0' 0  0  3' 4 " +
            "5  6  x' c  1' 2  0' 8  0' c  x' c' 4' 6' 1' x' 8' 6' 0' b  0  0  7  0  x' 0  0  0' 6  1  0  0  1  3  0' 2  i  c  1  0' 6  1  -  0  8  0  7  5' 2  7 " +
            "0  c  6  3  0  0  0  1  i' 0  7' 0  0' 5' 3  3  7  0' 5  0' 0' 1  -  3  5  7  2  0' 0' 0  8  0' 4  0  5  0  -  0  0  0' b  0  c  0' c  b' b' 7  b' c' " +
            "6  b  1' 0  8  0  3  5' 3  0  2  3  5' 0' 0' 0  i' c  i  0' x' 4' -  c  0' 0  3' 0  7  8' 0  7' 3' 0  0  0  1' 0  2' 0  0  x' 4  0' 3  3  0  c' 0' 0 " +
            "c  6  3  0  0  i' 3' 0' 0' 8' 1  3' 0' 7  2  0  c  0  -  8' 4' 5' 4' i' 3' -  b' x' 0  8  5  4  -  x' 0' 0  7  3  8  x' 8  0' -  0' 8  1  5  5' 0' x' " +
            "6' 0  i' 0  0  8  0  0  5  c  0' 0  4  c' 0' b' 8  5  -  7  i' 5' 3' 4  2  0  3  c  i  0' 7  1  4  7' 6' 0' 1' 0  0' 0  3' 0  i  4  c  1  2  0' 0  0 " +
            "3  -  3' 2  1' b' 0' 8  i  3  -  6' -  6  8' 0  i  b' 4' 6' x' 8' 7' 1  1  i  1  1  c  7  b  0' 8' x' 1' 7  0' 0  x' 2' 0  -  i  0  7  8  0' i' 8  0 " +
            "4  i  -  0' 2' 2' -  7  c' 6' 2' 2  1' 2' 8' 2' 1' 0  c  0  5  0' 8' 1  b  8  7  0' 4  -  c  6  0' 0' 0' 1  0' 0  3  2  3  x' 3  b' x' 0' -  x' 7  0 " +
            "c' 0  0  x' 7' 0  x' 0  -  0  x' i' 1  b' 0  -  i' 8  i' 0  -  0' 7' 1  4' 0' 2' x' 2  4' b' 2  x' 0  -  4  4  -  b  0  c  i  -  4  0  6  2  i  -  0 " +
            "x' i  1  3' c' 6  0  1' 6' 4' 5' 6' 5' 1' 2  -  2  7' 3' 5' 3' 7' 0' 0' 0' 0' x' 3' i' 4' b' 0' 7' 8' 3' 6' 1' 8' 7' 1' 0' c' 0' 0' 4  5  4  c  0  0' " +
            "1' 3' 2' 0' 5  0' 5  0  0' 3  0' x' c' 1' 7' 3' 1' -  0  0' x' b  6  0' 0  2  0' 7  2' 0  3  0  1  -  2  4' 4  5' 0' 1  0  5  3  0  0' 0  0  7  5  6' " +
            "7' -  8' 3  2  b' 5  -  c  6  3' i  i  3  8  0' 4  0' 6' 6' 1  c' 2' 2' 2' 4  1  1  1  0' 8  0  0' 5  0' x' 0' 1  -  0' 0' 1' 1  1' 4' i' 5  x' 4' 0 " +
            "0' x' 0' 1  2  3' 6' 0' 0  x' 7  0  0  8' 0  6' 2' 0  c' 0' 0  1  5  2' 5' 0' 7  0  5  8  i  0  6' 0  0' i' 5  0  0  x' 4  x' 5  0  4' 0  -  6  -  i " +
            "0  0  6  b  0' 0' 0' 2' x' 0' x' b' 0  0' -  b' 5' 1' x' -  6' 0  b  3  6  b' -  7  -  8' 2' 4  7  2  -  b' 0  i  1' 2' c' 1' b' 0' 4  b' 1  -  0  0 " +
            "c  -  0  5  0  7  4  3' i  0  4  5  5' i  c  c' 6' -  0' 0' 8  2' 0  0  -  2  0' x' 2  4  c' c' -  0  b  0  0  6  0' x' 8' 8' x' 2  1  5  5' 4' 0' 7 " +
            "x' 0' 2  0' 0  0' 1  6' c' 2  0  1  b  6' 4  5' 0' i  x' 0' 6  5  8' -  0' -  2' 6  0' 0  c  c  2  i  0' b' 1' 0' 0  0' 3' 8' 2  b' 3' 0' 5' 6  7' - " +
            "4  c' 7  3  x' c  -  7' 6  8' 7  7  i  3  -  i  c' 1  7  8' 2' i' b  2' b  x' 8  c  -  -  3  -  0  7  b  -  2  7  7  0  i  0' 3  0' 5' 0  0' 4  0  0' " +
            "3  0  -  1' 0  c  b  x' c' 0' x' 0' 0  b' 6  3  c  1  8  2' 0' 4  5  0  5' 0  1  0  0  0  8  b  1  x' 0' 1' 0' 1  -  4  1  x' 5' 0' 0' -  b  -  b  5' " +
            "0  0  0' 3' 0' 4' 6  1' 0  7  0  1' 4' 6' 1' 8  2' 0' -  5' 0  c  3  0  4  3  3  i  3  5  c  0  0' 0  i' 7  x' 0' i  0  c' 0  3  0  2  8  i  c  5' 7 " +
            "7  6  7  6' -  2' -  2' 0  0' 8  1  0  0  0  3' 0  2  8  i  -  i  0  8  0' 0  -  b  0  6  7  0  x' 2  3  0' 2  1' 0' 0  6' 0' 0  6  0  0  0  8' 0' 1' " +
            "c  i  0  5' -  3  x' 7' 3  2' 0  0  1  1  0' 0  1' b  0  8  4  i  4  0  0  i  5  0  6  2  3  0  1  i  0  0' -  5  0  -  4' x' 6  8  3  0  i' 7  -  0 " +
            "b  1' x' 1' i  3  -  1' -  8  6  0  8  0  3  0  1' 2  1' 0  -  0  0  i  0' -  4  0  b' 5  0  0' 4  0  0  2' 0  5' 4  2  8' 6' i' 2  0  5  6  x' 5  5 " +
            "b  3  0  4  8' 7  8' 5  5  i  c  8' 4' 0  6  6' 0  7  0' 8' 5' x' -  3  x' 6  3  4  8' 0  8' 5  5' 0  b' 0  0  3' c' 0  3  8  0  b  6  6  4  5  c  - " +
            "c' 0' x' 7' 0' 4' 0' 6' 1  7' 0' 0  0' 8  b' i  0' 0  c' 0  0' 7  0  0  i  4  0' i  5  4  x' 8  0' 6  3  0  i  0' 3  -  1  -  0  x' i  0  2  6  i' 5' " +
            "6  0  i  0' 0' 3' 5' i' c  3  c' 0  0' 0  0' 0  3  4  7  c  x' 0' c  0  0  8  0  0  1  0  8  0  0  4  b' b  0' 8  0  2  0  c' 6  -  4  4  -  0' x' 2 " +
            "1' 8  -  x' 0' x' 4  1' 0' x' 2' 1  2  4' 3' i' x' 5  i  0  5  6  x' c  1  i  0  5  4  5  x' 0  0  0  6  8  8  0  c' -  4  8  c  0' 6  c  4  6' 7  0 " +
            "0  0  3  3  0' 8' x' 1  0' x' 8' 8' 1  0  0  4  2  0' x' 1  -  0  0  2  7  0  c' 0  0' 0  x' b  4  x' b' 5  1  -  1  1  c  b  6' 4' 5  0' 4' 7  1  0 " +
            "0  5  2  6  i  2' 0  0  2' 5' 0' 2' 0' c  -  0  2  0  0  2  0  x' x' b' 5' x' 0  3  6  b  c  b' 8  x' 0  i  b  0  5  0  0  8  2  x' b  1  0  -  7  1 " +
            "-  3  8  6  8' 0  3' 0  2' 0' 2' x' 0  x' 8  0  0  2  3  0' 8  0' 2' 5' 4' 0' 6  0' 0  0' 0  0  -  0  0  8  c  4' 0' 3  1  3  i' x' 0  0  b  x' 8' - " +
            "b  6  0' 0' 2  0' b' 5' 8' 2' 6' 2' -  8  7  0  8  2  2  6  0  8  2  8' 0' 3  i  5  6  i' 0  0  6  0  0' 5  2' 0  i  0  c  b' x' 1  0  2  0  i' 0' 0' " +
            "0  7  0  3' 3' b' x' 0  3' -  2' 4' 0' 0  2  0  4  0  -  2  4  i' x' 1' 2' 1' 0' 1  c  8  6' 0  -  3  b  0' -  0  0' c  8  0  -  0' 8  b  6  6  0  0 " +
            "2  0' 0  2' 5' 3' 7' 0' 1' 8  1' -  0' -  -  0  3  0  0  b  0  2  c  0  i' 2' -  6' 0  b  0' 7  1  i' 0' -  0  6  3  0  c  0' x' c  5' 6' 0  0  c' x' " +
            "3  0  3  -  0' 6' 6' 1  b  0' 1  2  -  i' 1  c' 0  i  0' 0' 0  0  x' 0  7  -  8' i' 3' 2  i' 0  1' 2' 3' 5' 1' 3' 4' -  0' x' 0  7  0  6  0' 8  8  6 " +
            "0  1' 6  1' 0  0  5' b  i  2' b' -  1' 0' 6  1  b  0  4  5' -  0' 0  7  0  0  3  3  b  3  3  5  0  6' b' x' 3  c  -  0  8  8  c' 0' 6' 2  1  c  2  - " +
            "1  1' c  0  x' 0' 1  4  i' 5  0  7  x' c  0' -  1  0  -  2  4' 6  0  0  -  0' b  1  1' 6  1' 7  i' 1' 0' 4' 5' 1  8  0' c  1  3  c' 8  0  -  6' 0' 0 " +
            "b' -  8  0' 0  2' 0  c  1  1' b' c  0' 0  b  0' 0  b' 3' x' x' 1' 7  i' 5  c  0  5  4' 0' 0  6  5' 4  8' i  c' 0  7  0  b  5  -  0  4  0  c  -  2' 2 " +
            "c  x' 6' 0' 0' x' 4' 0  7' i  i  0  0  1  0' b' 8' 4  1  0' c  0  -  0  5  5  i' i' 2' 0' x' -  2' b' 3  8' 0  0  0  c' 8  3' c' 0  0' 1  0  0  0  0' " +
            "i' 6' 5' x' 8  4  5  7' x' c  b  c  i' b  c  6  6  7  b  5' 5' 7  0' 0  4  0' 4  1  x' i' 0' 5  0  0' 1  c  2' 3  i  -  c' 6' 2' x' 2' x' 1  2  0' 0";

    private static String s4 = "4  7  0  0  c  0  3  0  5' 1  1  7  7  -  b  1' c' 2' c' 8  6  c' x' i  4' i  6  c  -  x' 0' 7  1  i' i  0  1  5  i  1' 0' i  4  4  5' i  0  5  0  i' " +
            "0  8  8' 4  c  0  b' 8  4' 0' 0  i  8' 0  5' 0  1  7  b  x' 0  c' 5  0' i  0' 2  0  0' 0  8  x' 5  0  x' 0  x' x' 7  8  1' 3  0  3  0' x' 0  3' 3  0 " +
            "i  c  i  c' i  3  4' x' 6' -  i  0  5  3' 0  0' 2  2' 5  c' 0  5  0  5  c  c  6  i  c' 7  0  4  c' c  8  4' 0  0  0' 0' 4' 1' x' 0  5  c' -  5' 0' b " +
            "i  3  -  0' -  -  4  c  6  0  0' 0  i' 0  b' 0  0  x' b  c  -  3  -  6  0  0  -  b  0  3  0  -  -  0' 0  0' 7' 0  0  6' 3  0  1' 0  2' 0  0' 0' 0' 8 " +
            "0' 0  -  c  0' 1  2  0' 2  i  0  0  6  0  2  0  0  0' c' 7  0' 3  c  5  7  0  3  0' 1' 6  2  2  6' 0' 0' 5  4' 7' b' 5' 2' 0  0  1' 0  0  3' 6  0  0 " +
            "5  7  0  0  b  5  4  0  0  0  6  0  5  b  2  2  5  0' 1  0  7  0  i  0  4  c  -  5  7  -  i  5' x' 7' 0  0  0  8  1  3  -  0  7' 4  1  0  8' x' c  3 " +
            "0  c  0  5  7' 7  4' 1  0  8  0  i  0  i  2' 8  0' 4  3  -  2  7  0' 0' 7  0  3  4  b' 6  7' 6' x' 1' 0' 1  8  c  -  2  c  2' 0  4  4  -  -  0  4  5 " +
            "0  1  0  0' 1  0  4' 1  5  b' 7  2  1  0' 7  1' 8' 8  0' 7  8  5  b' 3  -  0  0  5  -  x' i  1' b  c' 8' 3  c  1  0  0  c  2  0  -  0  0  0  0  b  5 " +
            "5  3  0' c' 0  0  i' b  5  0  i  0  0  b  3' 3' 3' 1' 0' -  5' i  0' 2  0  -  6  0' 3' 0' 2  0' i  x' 1' 1' 1  1  1  1  1  1  1  1  1  7  0  b  4  0' " +
            "c  0' 8' 3  i  4  0  5  0  -  0' 0  b  b  -  0' -  5' 7' i  0' i' 0  4  c  5  i  3' 4' -  0  0  6  b  -  1' 4' 0' 0  -  i  3' 1  3' 5  i  b  0  -  8 " +
            "5  4' x' 0  2  -  0' -  2' 7  i' i  5  1  7  x' b  b  3' 0' 8  0  5  6' -  0  6  0  3' -  c  0  c  0  0  3  1  i' 5' 3  i  b' 0  0  0' 0  0  5  0' 0 " +
            "3  6  6  4  0  0  x' 4  i  8  0' 0  0  7  8  6  -  0  0  2' 3  0' i  4' 0  2  0  7  0' c  8  3  i  0  0  0  i  6  i  1  6  x' 0  6  5  0  5  0' 3' 2 " +
            "0  6  b' 0  0  0  2' 5  2' 0  6' 0  x' x' 0  5' 0  2  0  8  b  4  b' 5' 0  -  0  i  0  x' 5  0' 6  x' 0  0  2  0  0  0  0  8  -  i' 5  0  0  0  3  4 " +
            "5  6  x' c' 1  2  0  8  0  c  x' c' 4  6  1' x' 8  6  0  b' 0' 0  7  0' x' 0  0  0  6  1  0  0  1  3  0  2  i  c  1  0  6  1  -  0  8  0' 7' 5' 2  7' " +
            "0  c  6  3  0  0  0' 1  i' 0  7  0  0  5' 3  3' 7  0' 5  0  0' 1' -  3' 5' 7  2  0' 0  0  8  0  4  0' 5  0  -  0  0  0  b' 0  c  0' c  b  b' 7  b  c' " +
            "6  b  1  0  8  0  3  5  3  0  2  3  5' 0' 0' 0  i  c  i  0  x' 4' -  c  0' 0  3' 0  7  8  0  7  3' 0' 0  0  1  0  2  0  0  x' 4  0  3' 3  0' c  0' 0 " +
            "c  6  3  0  0  i  3  0' 0  8  1  3' 0' 7' 2  0  c  0  -  8  4  5  4' i  3  -  b' x' 0  8  5  4' -  x' 0  0  7  3  8  x' 8  0' -  0  8  1  5  5  0  x' " +
            "6  0  i  0' 0' 8  0  0  5' c  0' 0' 4' c' 0  b' 8  5  -  7  i' 5' 3' 4' 2  0  3' c  i  0  7' 1  4  7  6  0  1' 0' 0' 0  3' 0  i' 4  c' 1  2  0  0  0' " +
            "3' -  3  2  1  b' 0  8' i  3  -  6  -  6' 8  0  i  b  4  6  x' 8  7  1  1' i  1' 1  c' 7' b' 0' 8  x' 1  7' 0  0' x' 2  0  -  i  0  7  8  0' i  8' 0 " +
            "4  i  -  0' 2  2' -  7  c' 6  2  2' 1  2' 8' 2' 1  0' c' 0  5' 0  8' 1  b' 8  7  0  4' -  c  6' 0  0  0' 1  0  0' 3  2  3  x' 3' b' x' 0  -  x' 7  0 " +
            "c  0  0' x' 7' 0  x' 0  -  0' x' i  1  b  0  -  i  8  i  0  -  0' 7  1  4  0' 2' x' 2' 4  b' 2  x' 0' -  4  4' -  b  0  c  i' -  4' 0' 6  2  i  -  0 " +
            "x' i' 1' 3' c' 6' 0' 1' 6' 4' 5' 6' 5' 1' 2  -  2' 7  3' 5' 3' 7' 0' 0  0  0  x' 3  i  4  b  0  7  8  3  6  1  8  7  1  0  c  0' 0' 4  5  4  c  0  0 " +
            "1' 3' 2' 0  5  0  5  0  0' 3  0' x' c  1  7' 3  1' -  0  0  x' b  6  0  0' 2  0' 7' 2' 0  3' 0  1  -  2  4  4' 5' 0' 1' 0  5  3' 0  0' 0  0' 7  5  6 " +
            "7' -  8' 3  2  b' 5  -  c  6  3  i  i' 3  8' 0' 4' 0  6  6  1  c  2  2  2  4' 1' 1' 1' 0' 8  0' 0  5  0  x' 0  1  -  0' 0' 1' 1  1  4  i  5  x' 4  0' " +
            "0  x' 0' 1  2' 3  6' 0' 0  x' 7  0  0  8' 0' 6  2' 0' c  0' 0' 1' 5  2' 5  0' 7' 0' 5' 8  i' 0  6' 0  0  i  5' 0  0  x' 4  x' 5  0  4  0' -  6  -  i " +
            "0  0' 6' b  0' 0  0' 2' x' 0' x' b' 0' 0  -  b  5  1  x' -  6' 0' b' 3  6' b' -  7  -  8  2' 4' 7' 2' -  b  0  i' 1' 2  c' 1  b' 0  4  b  1  -  0  0 " +
            "c  -  0  5  0  7  4  3' i  0  4  5  5' i  c  c' 6' -  0' 0' 8' 2' 0' 0' -  2' 0' x' 2  4  c' c  -  0  b  0  0' 6' 0' x' 8' 8' x' 2  1  5' 5' 4' 0' 7 " +
            "x' 0  2  0  0  0' 1  6' c  2' 0  1  b  6' 4  5  0' i' x' 0' 6  5  8  -  0  -  2' 6  0' 0  c  c  2  i  0  b  1' 0  0  0' 3' 8' 2  b  3  0  5' 6  7  - " +
            "4  c  7  3  x' c  -  7' 6' 8  7  7  i  3  -  i  c' 1' 7' 8' 2  i' b  2' b  x' 8' c  -  -  3  -  0  7  b  -  2  7  7' 0' i  0  3' 0  5  0' 0' 4  0  0 " +
            "3  0' -  1  0' c' b' x' c  0' x' 0' 0' b' 6  3  c' 1' 8' 2  0  4  5  0  5' 0' 1' 0  0  0' 8  b  1  x' 0' 1  0' 1  -  4  1  x' 5' 0' 0  -  b  -  b' 5 " +
            "0  0  0' 3  0  4  6' 1' 0  7  0' 1' 4' 6' 1' 8  2  0' -  5  0  c' 3' 0' 4  3' 3' i  3  5' c  0' 0  0  i' 7' x' 0  i' 0' c  0  3' 0' 2  8  i' c  5' 7 " +
            "7  6  7  6  -  2' -  2' 0' 0  8  1  0  0  0  3' 0  2  8  i' -  i  0  8' 0  0  -  b  0  6  7  0' x' 2  3  0' 2  1  0' 0  6  0' 0' 6' 0  0' 0  8  0' 1' " +
            "c  i  0  5  -  3' x' 7' 3  2  0  0  1  1  0' 0  1  b  0  8  4  i  4  0  0' i' 5  0' 6  2  3  0' 1  i  0  0  -  5  0  -  4  x' 6' 8  3  0  i' 7  -  0' " +
            "b' 1  x' 1  i  3' -  1' -  8' 6  0  8  0  3  0' 1  2  1  0' -  0  0  i  0  -  4  0  b  5  0  0' 4  0  0  2  0' 5' 4' 2  8  6' i' 2  0' 5  6' x' 5' 5 " +
            "b  3  0  4  8' 7' 8  5' 5' i' c' 8' 4  0  6  6  0  7  0  8  5  x' -  3  x' 6  3  4  8  0' 8  5  5  0  b  0  0  3' c  0' 3' 8' 0  b  6  6  4  5  c' - " +
            "c  0  x' 7' 0' 4' 0  6' 1' 7' 0  0  0' 8  b  i' 0' 0' c  0' 0  7  0  0  i  4  0' i  5  4  x' 8  0  6  3  0  i  0  3  -  1  -  0  x' i  0' 2' 6  i' 5 " +
            "6  0  i' 0  0  3' 5  i' c' 3  c' 0' 0' 0' 0' 0  3' 4  7' c  x' 0' c  0  0  8' 0  0  1  0  8  0  0  4  b  b  0  8  0  2  0  c' 6  -  4  4' -  0' x' 2 " +
            "1' 8  -  x' 0' x' 4' 1' 0' x' 2' 1' 2' 4' 3' i' x' 5' i  0' 5  6  x' c  1  i  0  5  4  5  x' 0  0  0  6  8  8  0  c  -  4' 8  c' 0  6' c  4  6' 7  0 " +
            "0  0  3  3  0  8' x' 1  0' x' 8' 8  1  0  0' 4  2  0' x' 1  -  0  0' 2  7  0' c' 0  0' 0  x' b  4  x' b  5  1  -  1  1' c' b' 6  4' 5  0  4  7' 1  0' " +
            "0' 5  2' 6  i' 2' 0  0  2' 5  0' 2' 0' c  -  0  2  0' 0' 2' 0  x' x' b  5' x' 0  3' 6  b  c  b  8  x' 0' i  b  0  5' 0  0' 8  2' x' b' 1  0' -  7  1 " +
            "-  3  8  6  8  0  3  0' 2  0  2' x' 0' x' 8' 0  0  2  3' 0' 8  0' 2' 5  4' 0' 6' 0  0  0  0  0  -  0  0  8  c  4  0  3  1  3  i' x' 0  0  b  x' 8  - " +
            "b' 6  0' 0' 2' 0' b' 5' 8  2' 6  2' -  8  7  0' 8  2' 2  6' 0' 8' 2  8' 0' 3' i  5  6  i  0  0  6  0  0' 5  2  0  i  0  c' b  x' 1  0' 2  0  i  0  0' " +
            "0  7  0  3  3  b  x' 0  3' -  2' 4  0' 0' 2  0' 4  0  -  2  4' i' x' 1  2' 1  0' 1  c  8  6  0' -  3  b' 0  -  0  0  c  8  0  -  0' 8  b' 6  6  0  0' " +
            "2  0' 0' 2  5' 3' 7' 0' 1' 8' 1  -  0' -  -  0' 3  0  0  b' 0  2  c' 0' i' 2  -  6' 0  b  0  7  1  i  0  -  0  6  3  0  c  0  x' c' 5' 6' 0' 0' c' x' " +
            "3  0  3' -  0' 6  6  1  b' 0' 1' 2  -  i  1  c  0  i' 0  0' 0  0  x' 0  7  -  8  i' 3' 2  i  0' 1  2  3  5' 1' 3' 4' -  0' x' 0  7  0  6' 0  8  8  6 " +
            "0' 1' 6  1' 0  0  5  b' i  2  b' -  1  0  6  1  b  0  4  5  -  0  0  7' 0  0  3  3' b' 3' 3  5  0' 6  b  x' 3  c  -  0  8  8  c  0' 6  2  1' c' 2  - " +
            "1' 1  c' 0  x' 0  1  4  i  5  0  7  x' c' 0  -  1  0  -  2  4  6' 0' 0  -  0  b' 1  1' 6' 1' 7' i' 1' 0' 4  5  1  8  0  c  1  3  c  8  0  -  6  0' 0 " +
            "b  -  8' 0  0  2  0  c  1  1' b  c  0  0  b  0  0  b' 3  x' x' 1  7  i  5  c  0  5  4  0' 0  6  5' 4' 8' i  c  0  7  0  b' 5  -  0' 4  0  c' -  2  2 " +
            "c  x' 6' 0  0' x' 4  0  7  i' i  0  0  1  0' b  8  4' 1  0' c  0' -  0' 5  5  i  i  2  0  x' -  2  b' 3  8  0  0  0  c  8  3  c  0  0' 1  0  0  0' 0 " +
            "i  6  5  x' 8  4' 5  7' x' c  b  c  i' b  c  6' 6' 7  b  5  5  7  0  0' 4  0  4  1  x' i  0  5  0  0' 1  c  2  3  i' -  c' 6  2' x' 2' x' 1' 2' 0  0' ";

    private static String s5 = "c  0  2  0  2' 0' 2' 2' 1' 0  0  1' 1' 2  c' -  0  i  1  1' 2' 2' 1' -  0' " +
            "2  0  c  0' 0' b' 2  0' 2' 2  1  -  2  c' 1  0  i  1' 2  0' 0  1' 1' 2' 2' " +
            "c  0  b  b' 0  2' 2  2  0' 0' 1' 2  1' 0' x' b  2  2' 0' 0  0  0  2  x' 2' " +
            "0  -  0  0  2  0' 2' 1' 0' c  -  0  b' x' b' 1' 0' 0' 2' 1' 0  0  0' 1' 2' " +
            "c' 0  2  0  0  -  2' 2' 2' 2  1' 0' 0' b' 0' b' 0  0' 2' 0' 0  1  0' 2' 0 " +
            "c' c  0  0  2' 0' 2' 2' 1' 2' i' 0' 2' 1  i  1' 2  1' 2' 2' b' 0  c' 2' 1 " +
            "1  2' 2' x' 0' -  i  0' 1' 2  1' 2' 1' 1  1  i  0  1' 2' 2' 1' 0  2  -  2 " +
            "0  i  2' 0  x' 0  -  1  b' 2' 2' 2  1  c  0' 0  0' 0  1  c' 1' 2  2' c' 0' " +
            "1  2' 0' 1' 0  0  0  2  2' 2' 0' 2' 2' 1  c' x' 1' c' c  -  2  c' i' b  x' " +
            "1' 0  0  2  0' i' 1  i' -  0' 2' 2  0' 2' 1  b' 1  2  0' b  1' 0' 2  -  1 " +
            "c' 0  0  1' 0' 2  1  0  0  2' 0' 2  -  0' i' 0' 2  1' 1' 1  c  -  2  2  2 " +
            "2  0  1  2  0' 1  1  i' c' 0  b  2  -  -  1  i  x' -  1  1  0' 1' 2' 1' 0' " +
            "2  2  b  1' 0  1  1  0  2  0  0' 0' i' 0' 0  1' 2' 1' 0  1  2  0' 0  2  c' " +
            "c' 0' 0  2  c  i  1  -  1  1  1  i  2' 0' 0  2  0' i' 0  1' 1  -  1  c' 1 " +
            "b  1  2  i' 0  -  1' 0' 0' 0  i  x' 0  x' 0' 1' b  2  2  c  0  1  b' 1' 0 " +
            "0  0  0  1  2  0' 1' 2' 2' 0' 2  c  c' 2' x' 2  0' -  0  c  b  i  1' 2' 1' " +
            "0' i  1  b' 2  -  -  x' 2' 1' 0  0' 1  2' 0' 1' i' 1' b  1' -  0' 2  1' 2 " +
            "1  0  0  c  c  i' 0  0  0' 1' 2  0' 2' 1  0  -  2  -  2  b  2  0  1' i' c' " +
            "0  0  -  1' 2  0' 2  0' 1' 1  i  0' 2' x' 1  1' 2' 1' 0' 0' 0  b' c  0  x' " +
            "0  c  b' 1' x' b' i  0' x' 1  0  0' i' 2' 0  1  0  x' i  0' c  i  b  -  c " +
            "1' 0  0  2  0  1' 0' 0' -  1' 2  1' 0' 0' i  1  1  1' 1  1  x' 0' 0' 0  0' " +
            "2' 0  0  1' 1  0' 2' 2' 2  1  0' -  c' 0  i  1  0  0  i  0' i  1  0  2' i " +
            "2' 2' 1' 2  1' 1  2' 0' 2  1  0' 0  x' 0  0  0' 0  1  0  0' 2  1' 1  0  2 " +
            "2' 2' 0' 1' c' 0' 1  2' 0' c  2  -  0  0  2' b' i  0' 1  c' x' 1  0  1  - " +
            "1' 2  i' i  0  x' 0' 0  0  -  1' 0' 0  2' -  i' 2  2  2' x' 0' 1' 0  1  c' ";

    public static void main(String[] args) {
        Map map = MapLoader.generateStringFromMapFile("rnd1.map");

        List<Coordinate> valid = new LinkedList<>();
        System.out.println("VALID: " + Move.isMoveValidImpl(map, 23, 7, '2', false, true, valid, 1));

        valid.removeIf(e -> e.getX() == 23 && e.getY() == 7);
        System.out.println(valid);

//        char[][] testMap = new char[50][50];
//        String[] chars = s3.replaceAll("  ", " ").split(" ");
//        char player = '1';
//
//        List<Coordinate> validMovesOriginal = new LinkedList<>();
//        int counter = 0;
//        for (int i = 0; i < testMap.length; i++) {
//            for (int j = 0; j < testMap[0].length; j++) {
//                String s1 = chars[counter];
//                if (s1.contains("'")) {
//                    validMovesOriginal.add(new Coordinate(j, i));
//                }
//                testMap[i][j] = s1.replaceAll("\'", "").charAt(0);
//                counter++;
//            }
//        }
//
//        System.out.println("TEST SIZE: " + validMovesOriginal.size());
//
//        List<Coordinate> validTiles = new LinkedList<>();
//        long count = 0;
//        long start = System.nanoTime();
//        for (int i = 0; i < map.getGameField().length; i++) {
//            for (int j = 0; j < map.getGameField()[0].length; j++) {
//                if (Move.isMoveValidImpl(map, i, j, '1', true, true, validTiles, 1)) {
//                    count++;
//                }
//            }
//        }
//        long end = System.nanoTime();
//
//        System.out.println("TIME 1: " + (end - start) / 1_000_000 + " ms");
//        System.out.println("COUNT: " + count);
//        count = 0;
//        System.out.println();
//
//        start = System.nanoTime();
//        for (int i = 0; i < map.getGameField().length; i++) {
//            for (int j = 0; j < map.getGameField()[0].length; j++) {
//                if (Move.isMoveValidImpl(map, i, j, '2', true, true, validTiles, 1)) {
//                    count++;
//                }
//            }
//        }
//        end = System.nanoTime();
//
//        System.out.println("TIME 2: " + (end - start) / 1_000_000 + " ms");
//        System.out.println("COUNT: " + count);
//        count = 0;
//        System.out.println();
//
//        start = System.nanoTime();
//        for (int i = 0; i < map.getGameField().length; i++) {
//            for (int j = 0; j < map.getGameField()[0].length; j++) {
//                if (Move.isMoveValidImpl(map, i, j, '3', true, true, validTiles, 1)) {
//                    count++;
//                }
//            }
//        }
//        end = System.nanoTime();
//
//
//        System.out.println("TIME 3: " + (end - start) / 1_000_000 + " ms");
//        System.out.println("COUNT: " + count);
//        count = 0;
//        validTiles.clear();
//        System.out.println();
//
//        map.setGameField(testMap);
//        start = System.nanoTime();
//        List<Coordinate> validMoves = new LinkedList<>();
//        for (int i = 0; i < map.getGameField().length; i++) {
//            for (int j = 0; j < map.getGameField()[0].length; j++) {
//                if (Move.isMoveValidImpl(map, i, j, player, false, true, validTiles, 1)) {
//                    validMoves.add(new Coordinate(j, i));
//                }
//            }
//        }
//        end = System.nanoTime();
//
//
//        System.out.println("TIME 4: " + (end - start) / 1_000_000d + " ms");
//        System.out.println("SIZE: " + validMoves.size());
//        System.out.println();
//
//        //Move.isMoveValidImpl(map, 0, 0, '1', true, true, validTiles, 1);
//
//        System.out.println(validMovesOriginal.removeAll(validMoves));
//        System.out.println(validMovesOriginal);

        new Client("127.0.0.1", 8080).start();
    }
}